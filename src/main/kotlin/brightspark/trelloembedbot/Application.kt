package brightspark.trelloembedbot

import brightspark.trelloembedbot.listener.Listener
import brightspark.trelloembedbot.tokens.CommandToken
import net.dv8tion.jda.core.AccountType
import net.dv8tion.jda.core.JDABuilder
import net.dv8tion.jda.core.OnlineStatus
import net.dv8tion.jda.core.entities.Game
import net.dv8tion.jda.core.hooks.AnnotatedEventManager
import org.slf4j.LoggerFactory
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.beans.factory.annotation.Value
import org.springframework.boot.autoconfigure.SpringBootApplication
import org.springframework.boot.runApplication
import org.springframework.context.annotation.Bean
import javax.security.auth.login.LoginException
import kotlin.system.exitProcess

@SpringBootApplication
class Application {
	companion object {
		const val trelloKey: String = "10a61e7cd59f0840e292b285a9b21dab"
		// https://developers.trello.com/docs/api-introduction
		// https://developers.trello.com/reference/
		// https://developers.trello.com/page/authorization
		val messageDm = """
            |Hey there, to manage the Trello token for your server, please have a read below.
            |
            |Trello tokens are generated by a Trello user and is tied to their account, and I use that to access info about any cards or boards posted in Discord.
            |**Note:** I can only access boards that the token's Trello user can access!
            |
            |To generate a token, please click this link and allow access for this bot:
            |<https://trello.com/1/authorize?expiration=never&name=Trello+Embedder&scope=read&response_type=token&key=$trelloKey>
            |Now that you have your token, you need to tell me about it!
            |
            |To set the token, please use the following command in your server:
            |`t! token set <token>`
            |
            |To later check the token set for a server, use:
            |`t! token get`
            |
            |If you want to remove the token, use:
            |`t! token del`
            |
            |And that's it! While a token is set, I will respond to board and card links in channels I have access to with info about them :)
            """.trimMargin()
	}

	private val log = LoggerFactory.getLogger(this::class.java)

	@Value("\${token}")
	private lateinit var token: String

	@Autowired
	private lateinit var listener: Listener

	@Autowired
	private lateinit var commandToken: CommandToken

	@Bean
	fun init() {
		val builder = JDABuilder(AccountType.BOT)
			.setToken(token)
			.setStatus(OnlineStatus.DO_NOT_DISTURB)
			.setGame(Game.playing("Starting up..."))
			.setEventManager(AnnotatedEventManager())
			.addEventListener(listener, commandToken)
		try {
			builder.build()
		}
		catch (e: LoginException) {
			log.error("Token '$token' is invalid!")
			exitProcess(0)
		}
	}
}

fun main(args: Array<String>) {
	runApplication<Application>(*args)
}
